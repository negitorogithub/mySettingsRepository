<templateSet group="Flutter">
  <template name="freezedstate" value="import 'package:flutter/foundation.dart';&#10;import 'package:freezed_annotation/freezed_annotation.dart';&#10;part '$FILE_NAME$.freezed.dart';&#10;@freezed&#10;abstract class $CLASS_NAME$ with _$$$CLASS_NAME$ {&#10;  factory $CLASS_NAME$({&#10;  $END$&#10;  }) = _Create;&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="FILE_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CLASS_NAME" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="freezedstatejson" value="import 'package:flutter/foundation.dart';&#10;import 'package:freezed_annotation/freezed_annotation.dart';&#10;part '$FILE_NAME$.freezed.dart';&#10;part '$FILE_NAME$.g.dart';&#10;@freezed&#10;abstract class $CLASS_NAME$ with _$$$CLASS_NAME$ {&#10;  factory $CLASS_NAME$({&#10;  $END$&#10;  }) = _Create;&#10; factory $CLASS_NAME$.fromJson(Map&lt;String, dynamic&gt; json) =&gt; _$$$CLASS_NAME$FromJson(json);  &#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="FILE_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CLASS_NAME" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="statelesswidget" value="class $NAME$ extends StatelessWidget {&#10;  const $NAME$();&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    $END$&#10;  }&#10;}" description="" toReformat="false" toShortenFQNames="false">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="statelesswidgetfilename" value="class $NAME$ extends StatelessWidget {&#10;  const $NAME$();&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    $END$&#10;  }&#10;}" description="" toReformat="false" toShortenFQNames="false">
    <variable name="NAME" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="testmain" value="import 'package:appront_media_app/enviroment.dart';&#10;import 'package:appront_media_app/repository/firebase/firebase_crashlytics_repository.dart';&#10;import 'package:appront_media_app/view/app.dart';&#10;import 'package:firebase_core/firebase_core.dart';&#10;import 'package:flutter_test/flutter_test.dart';&#10;&#10;void main() {&#10;  TestWidgetsFlutterBinding.ensureInitialized();&#10;  FirebaseCrashlyticsRepository(Firebase.initializeApp());&#10;  ApprontApp(const Environment.development());&#10;  &#10;  $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="crg" value="context.read&lt;$END$&gt;()" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="cwg" value="context.watch&lt;$END$&gt;()" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="_Header" value="class _Header extends StatelessWidget implements PreferredSizeWidget {&#10;  const _Header();&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return AppBar();&#10;  }&#10;&#10;  @override&#10;  Size get preferredSize =&gt; const Size.fromHeight(kToolbarHeight);&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="_Scaffold" value="class _Scaffold extends StatelessWidget {&#10;  const _Scaffold();&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return const Scaffold(&#10;      appBar: _Header(),&#10;      body: _Body(),&#10;    );&#10;  }&#10;}&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="filename" value="$NAME$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="sarg" value="/// $END$&#10;class $SCREEN_NAME$ScreenArguments with _NoParamsMixin implements IScreenArguments {&#10;  const $SCREEN_NAME$ScreenArguments();&#10;&#10;  @override&#10;  Route generateRoute() =&gt; MaterialPageRoute(&#10;        builder: (_) =&gt; $SCREEN_NAME$Screen(this),&#10;        settings: settings,&#10;      );&#10;&#10;  @override&#10;  bool get isSingleTask =&gt; false;&#10;&#10;  @override&#10;  bool get isSingleTop =&gt; false;&#10;&#10;  @override&#10;  String get screenNameFormat =&gt; '/$SCREEN_NAME_CAMEL$';&#10;}&#10;" toReformat="false" toShortenFQNames="true">
    <variable name="SCREEN_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SCREEN_NAME_CAMEL" expression="snakeCase(SCREEN_NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
</templateSet>